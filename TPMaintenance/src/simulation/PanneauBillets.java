package simulation;import java.awt.*;import java.awt.event.*;import compte.Argent;/** Le panneau qui permet a l'operateur de rentrer le nombre de billets  * dans le distributeur au startup */class PanneauBillets extends Panel{    /** Constructor     */    PanneauBillets()    {        setLayout(new GridLayout(0, 1, 0, 0));        setFont(new Font("Monospaced", Font.PLAIN, 14));                add(new Label("Un vrai guichet aurait un mechanisme de detection",                      Label.CENTER));        add(new Label("ou permettrait a l'operateur d'entrer le nombre",                      Label.CENTER));        add(new Label("de billets de $20 et de $5 dans le distributeur d'argent.",                      Label.CENTER));        add(new Label("Pour la simulation,",                      Label.CENTER));        add(new Label("Veuillez entrer le nombre de billets de 20$.",                      Label.CENTER));        add(new Label("Veuillez entrer le nombre de billets de 5$.",                Label.CENTER));        add(new Label("Puis appuyer sur ENTRER",                      Label.CENTER));                billsNumberField = new TextField(30);        billsNumberField.addActionListener(new ActionListener() {            public void actionPerformed(ActionEvent e)            {                synchronized(PanneauBillets.this)                {                    PanneauBillets.this.notify();                }            }        });                Dollard_5_BillsNumberField = new TextField(30);        Dollard_5_BillsNumberField.addActionListener(new ActionListener() {            public void actionPerformed(ActionEvent e)            {                synchronized(PanneauBillets.this)                {                    PanneauBillets.this.notify();                }            }        });        Panel billsNumberPanel = new Panel();        billsNumberPanel.add(billsNumberField);        add(billsNumberPanel);                  Panel Dollard_5_BillsPanel = new Panel();        Dollard_5_BillsPanel.add(Dollard_5_BillsNumberField);        add(Dollard_5_BillsPanel);      }    /** Demande a l'operateur de rentrer le nombre de billets dans le distributeur     *     *  @return le nombre entre     */    synchronized Billets readBills()    {        boolean validNumberRead = false;        int billsNumber = 0;        int bills_5_Number = 0;                billsNumberField.setText("");                while(! validNumberRead)        {            billsNumberField.requestFocus();            try            {                wait();            }            catch(InterruptedException e)            { }                                try            {                billsNumber = Integer.parseInt(billsNumberField.getText());                bills_5_Number = Integer.parseInt(Dollard_5_BillsNumberField.getText());                if (billsNumber >= 0 && bills_5_Number >= 0)                    validNumberRead = true;                else                    getToolkit().beep();            }            catch(NumberFormatException e)            {                getToolkit().beep();            }            if (! validNumberRead)            {                billsNumberField.setText("Doit etre un entier valide >= 0");                billsNumberField.selectAll();                                Dollard_5_BillsNumberField.setText("Doit etre un entier valide >= 0");                Dollard_5_BillsNumberField.selectAll();            }        }        return new Billets(billsNumber, bills_5_Number);    }        /** Le champ dans lequel le nombre de billets doit etre entre     */    private TextField billsNumberField;        private TextField Dollard_5_BillsNumberField;}